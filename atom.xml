<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jie-Think</title>
  
  <subtitle>blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-29T13:07:54.323Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis ops learn</title>
    <link href="http://yoursite.com/2018/08/29/backend/go/redis/redis_start_learn/"/>
    <id>http://yoursite.com/2018/08/29/backend/go/redis/redis_start_learn/</id>
    <published>2018-08-29T13:07:26.000Z</published>
    <updated>2018-08-29T13:07:54.323Z</updated>
    
    <content type="html"><![CDATA[<h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/go-redis/redis"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">client := redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">Addr: <span class="string">"localhost:6379"</span>,</span><br><span class="line">Password: <span class="string">""</span>,      <span class="comment">//默认空密码</span></span><br><span class="line">DB: <span class="number">0</span>,             <span class="comment">//使用默认数据库</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> client.Close()       <span class="comment">//最后关闭</span></span><br><span class="line"></span><br><span class="line">pong, err := client.Ping().Result()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"Connected result: "</span>, pong)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ops-strings"><a href="#ops-strings" class="headerlink" title="ops: strings"></a>ops: strings</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ops: strings</span></span><br><span class="line"><span class="comment">//// set</span></span><br><span class="line">client.Set(<span class="string">"hello"</span>, <span class="string">"hello redis"</span>,<span class="number">0</span>) <span class="comment">//忽略错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// get string</span></span><br><span class="line">str := client.Get(<span class="string">"hello"</span>)</span><br><span class="line">fmt.Println(str)</span><br><span class="line"></span><br><span class="line"><span class="comment">//// del string</span></span><br><span class="line">client.Del(<span class="string">"strtest"</span>)</span><br></pre></td></tr></table></figure><h2 id="ops-lists"><a href="#ops-lists" class="headerlink" title="ops: lists"></a>ops: lists</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ops: lists</span></span><br><span class="line"><span class="comment">//// push</span></span><br><span class="line">client.LPush(<span class="string">"list"</span>,<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>) <span class="comment">//rpush则在尾部插入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// rm, pop</span></span><br><span class="line">client.LRem(<span class="string">"list"</span>,<span class="number">2</span>,<span class="string">"three"</span>) <span class="comment">//删除list中前2个value为 ‘three’的元素</span></span><br><span class="line">client.LPop(<span class="string">"list"</span>) <span class="comment">//删除头部的值，同理RPop删除尾部的值。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// range</span></span><br><span class="line">list, _ := client.LRange(<span class="string">"list"</span>, <span class="number">0</span>, <span class="number">2</span>).Result()</span><br><span class="line">fmt.Println(<span class="string">"List: "</span>, list)</span><br></pre></td></tr></table></figure><h2 id="ops-hashes"><a href="#ops-hashes" class="headerlink" title="ops: hashes"></a>ops: hashes</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hashes</span></span><br><span class="line"><span class="comment">//// set</span></span><br><span class="line">user := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">user[<span class="string">"name"</span>] = <span class="string">"jim"</span></span><br><span class="line">user[<span class="string">"gender"</span>] = <span class="string">"man"</span></span><br><span class="line">user[<span class="string">"age"</span>] = <span class="number">23</span></span><br><span class="line">client.HMSet(<span class="string">"user"</span>,user)</span><br><span class="line"></span><br><span class="line"><span class="comment">//// set</span></span><br><span class="line">client.HSet(<span class="string">"user"</span>, <span class="string">"name"</span>,<span class="string">"tom"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//// get</span></span><br><span class="line">name := client.HGet(<span class="string">"user"</span>,<span class="string">"name"</span>)</span><br><span class="line">fmt.Print(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">//// getAll</span></span><br><span class="line">hash, _ := client.HGetAll(<span class="string">"user"</span>).Result()</span><br><span class="line"><span class="keyword">for</span> k, v:= <span class="keyword">range</span> hash&#123;</span><br><span class="line">fmt.Printf(<span class="string">"key: %v, value: %v "</span>,k, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考: <a href="https://www.jianshu.com/p/4045a3721b3c" target="_blank" rel="noopener">https://www.jianshu.com/p/4045a3721b3c</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;连接测试&quot;&gt;&lt;a href=&quot;#连接测试&quot; class=&quot;headerlink&quot; title=&quot;连接测试&quot;&gt;&lt;/a&gt;连接测试&lt;/h2&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="backend" scheme="http://yoursite.com/categories/backend/"/>
    
    
      <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>grpc start learn</title>
    <link href="http://yoursite.com/2018/08/29/backend/go/grpc/grpc_start_learn/"/>
    <id>http://yoursite.com/2018/08/29/backend/go/grpc/grpc_start_learn/</id>
    <published>2018-08-29T12:21:53.000Z</published>
    <updated>2018-08-29T12:22:49.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ex-helloworld-start"><a href="#ex-helloworld-start" class="headerlink" title="ex helloworld start"></a>ex helloworld start</h1><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><p>建立流程:</p><ol><li>建 proto3 文件, 定义 service</li><li>service 开发</li><li>client 开发</li></ol><h2 id="1-proto-文件"><a href="#1-proto-文件" class="headerlink" title="1. proto 文件"></a>1. proto 文件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The greeting service definition.</span></span><br><span class="line">service Greeter &#123;</span><br><span class="line">  <span class="comment">// Sends a greeting</span></span><br><span class="line">  rpc SayHello (HelloRequest) returns (HelloReply) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The request message containing the user's name.</span></span><br><span class="line">message HelloRequest &#123;</span><br><span class="line">  <span class="keyword">string</span> name = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The response message containing the greetings</span></span><br><span class="line">message HelloReply &#123;</span><br><span class="line">  <span class="keyword">string</span> message = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义了一个 service Greeter , 参数: SayHello, return: HelloReply</p><h2 id="2-service-开发"><a href="#2-service-开发" class="headerlink" title="2. service 开发"></a>2. service 开发</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">port = <span class="string">":50051"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// server is used to implement helloworld.GreeterServer.</span></span><br><span class="line"><span class="keyword">type</span> server <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现 helloworld.GreeterServer 方法</span></span><br><span class="line"><span class="comment">// SayHello implements helloworld.GreeterServer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *server)</span> <span class="title">SayHello</span><span class="params">(ctx context.Context, in *pb.HelloRequest)</span> <span class="params">(*pb.HelloReply, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.HelloReply&#123;Message: <span class="string">"Hello "</span> + in.Name&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">lis, err := net.Listen(<span class="string">"tcp"</span>, port)         <span class="comment">// 开启监听</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"failed to listen: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">s := grpc.NewServer()                       <span class="comment">// 建一个 grpc Server</span></span><br><span class="line">pb.RegisterGreeterServer(s, &amp;server&#123;&#125;)      <span class="comment">// 将 RegisterGreeterServer 服务绑定到 grpc 上</span></span><br><span class="line"><span class="comment">// Register reflection service on gRPC server.</span></span><br><span class="line">reflection.Register(s)                      <span class="comment">// 将服务注册到 rpc 上</span></span><br><span class="line"><span class="keyword">if</span> err := s.Serve(lis); err != <span class="literal">nil</span> &#123;        <span class="comment">// s.Serve(lis) 是将 grpc 服务绑定监听端口</span></span><br><span class="line">log.Fatalf(<span class="string">"failed to serve: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程:</p><blockquote><ol><li>开一个监听端口</li><li>建立一个 rpc 服务</li><li>将服务绑定到 rpc 上</li><li>将服务注册到 rpc 上</li><li>绑定 grpc 服务 和 端口监听</li></ol></blockquote><h2 id="3-client-使用-grpc-服务"><a href="#3-client-使用-grpc-服务" class="headerlink" title="3. client 使用 grpc 服务"></a>3. client 使用 grpc 服务</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"golang.org/x/net/context"</span></span><br><span class="line"><span class="string">"google.golang.org/grpc"</span></span><br><span class="line">pb <span class="string">"google.golang.org/grpc/examples/helloworld/helloworld"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">address     = <span class="string">"localhost:50051"</span></span><br><span class="line">defaultName = <span class="string">"jie"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// Set up a connection to the server.</span></span><br><span class="line">conn, err := grpc.Dial(address, grpc.WithInsecure()) <span class="comment">// 创建客户端</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"did not connect: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()                                  <span class="comment">// 延迟关闭连接</span></span><br><span class="line">c := pb.NewGreeterClient(conn)                      <span class="comment">// 新建一个Greeter连接客户端</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Contact the server and print out its response.</span></span><br><span class="line">name := defaultName</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args) &gt; <span class="number">1</span> &#123;</span><br><span class="line">name = os.Args[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), time.Second) <span class="comment">// 设置超时 时间</span></span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line">r, err := c.SayHello(ctx, &amp;pb.HelloRequest&#123;Name: name&#125;) <span class="comment">// 使用客户端调用远程方法</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"could not greet: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">log.Printf(<span class="string">"Greeting: %s"</span>, r.Message)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程: </p><blockquote><ol><li>创建客户端</li><li>新建一个Greeter连接客户端</li><li>设置超时 时间</li><li>使用客户端调用远程方法</li><li>cloes客户端连接 and cancel()</li></ol></blockquote><p>总结:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ex-helloworld-start&quot;&gt;&lt;a href=&quot;#ex-helloworld-start&quot; class=&quot;headerlink&quot; title=&quot;ex helloworld start&quot;&gt;&lt;/a&gt;ex helloworld start&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="backend" scheme="http://yoursite.com/categories/backend/"/>
    
    
      <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
      <category term="grpc" scheme="http://yoursite.com/tags/grpc/"/>
    
  </entry>
  
  <entry>
    <title>goose learn start</title>
    <link href="http://yoursite.com/2018/08/29/backend/go/goose/goose_start_learn/"/>
    <id>http://yoursite.com/2018/08/29/backend/go/goose/goose_start_learn/</id>
    <published>2018-08-29T12:12:00.000Z</published>
    <updated>2018-08-29T12:13:18.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="what-goose"><a href="#what-goose" class="headerlink" title="what goose"></a>what goose</h2><blockquote><p>goose is a database migration tool.<br>You can manage your database’s evolution by creating incremental SQL or Go scripts.</p></blockquote><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><p>这个前提是需要安装 golang, 并会就 <code>goose</code> 命令生成到 <code>$GOPATH/bin</code> 目录下.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> go get bitbucket.org/liamstask/goose/cmd/goose</span><br></pre></td></tr></table></figure></p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> goose</span><br><span class="line"></span><br><span class="line">goose is a database migration management system for Go projects.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    goose [options] &lt;subcommand&gt; [subcommand options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -env string</span><br><span class="line">    which DB environment to use (default "development")</span><br><span class="line">  -path string</span><br><span class="line">    folder containing db info (default "db")</span><br><span class="line">  -pgschema string</span><br><span class="line">    which postgres-schema to migrate (default = none)</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">    up         Migrate the DB to the most recent version available</span><br><span class="line">    down       Roll back the version by 1</span><br><span class="line">    redo       Re-run the latest migration</span><br><span class="line">    status     dump the migration status for the current DB</span><br><span class="line">    create     Create the scaffolding for a new migration</span><br><span class="line">    dbversion  Print the current version of the database</span><br></pre></td></tr></table></figure><h3 id="create"><a href="#create" class="headerlink" title="create"></a>create</h3><p>创建一个新的 migration , 这个创建的是 go migration<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose create AddSomeColumns</span><br></pre></td></tr></table></figure></p><p>如果是创建 sql migration 的话, 在后边加个 sql 即可.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose create AddSomeColumns sql</span><br></pre></td></tr></table></figure></p><h3 id="up"><a href="#up" class="headerlink" title="up"></a>up</h3><p>应用所有可用的 migrations</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose up</span><br></pre></td></tr></table></figure><h3 id="down"><a href="#down" class="headerlink" title="down"></a>down</h3><p>从当前版本回滚单个 migrations<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose down</span><br></pre></td></tr></table></figure></p><h3 id="redo"><a href="#redo" class="headerlink" title="redo"></a>redo</h3><p>回滚最近应用的 migrations ，然后再次运行它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose redo</span><br></pre></td></tr></table></figure><h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><p>打印所有 migrations 的状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose status</span><br></pre></td></tr></table></figure><h3 id="dbversion"><a href="#dbversion" class="headerlink" title="dbversion"></a>dbversion</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goose dbversion</span><br></pre></td></tr></table></figure><h2 id="个人实验数据"><a href="#个人实验数据" class="headerlink" title="个人实验数据"></a>个人实验数据</h2><h3 id="配置如下"><a href="#配置如下" class="headerlink" title="配置如下:"></a>配置如下:</h3><p>目录结构:</p><p>jieLearn/<br>├── dbconf.yml<br>└── migrations<br>    ├── 20180829163647_jieTest.sql<br>    └── 20180829165529_addC4Col.sql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cat dbconf.yml</span><br><span class="line"></span><br><span class="line">development:</span><br><span class="line">    driver: mysql</span><br><span class="line">    open: root:password@tcp(127.0.0.1:3306)/jie_test?timeout=200ms&amp;parseTime=true&amp;loc=Local</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cat jieLearn/migrations/20180829163647_jieTest.sql</span><br><span class="line"></span><br><span class="line">-- +goose Up</span><br><span class="line">-- SQL in section 'Up' is executed when this migration is applied</span><br><span class="line">CREATE TABLE `jie_test`.`test_table` (</span><br><span class="line">  `c1` INT NOT NULL,</span><br><span class="line">  `c2` VARCHAR(45) NULL,</span><br><span class="line">  `c3` VARCHAR(45) NULL,</span><br><span class="line">  PRIMARY KEY (`c1`));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- +goose Down</span><br><span class="line">-- SQL section 'Down' is executed when this migration is rolled back</span><br><span class="line">DROP TABLE `jie_test`.`test_table`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> cat jieLearn/migrations/20180829165529_addC4Col.sql</span><br><span class="line"></span><br><span class="line">-- +goose Up</span><br><span class="line">-- SQL in section 'Up' is executed when this migration is applied</span><br><span class="line">ALTER TABLE `jie_test`.`test_table`</span><br><span class="line">ADD COLUMN `c4` VARCHAR(45) NULL AFTER `c3`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- +goose Down</span><br><span class="line">-- SQL section 'Down' is executed when this migration is rolled back</span><br><span class="line">ALTER TABLE `jie_test`.`test_table`</span><br><span class="line">DROP COLUMN `c4`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> goose -path "jieLearn" up</span><br><span class="line"><span class="meta">$</span> goose -path "jieLearn" down</span><br></pre></td></tr></table></figure><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>new table: goose_db_version, test_table</p><p>goose_db_version: content<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1012018-08-29 08:33:23</span><br><span class="line">22018082916364712018-08-29 08:33:23</span><br><span class="line">32018082916364702018-08-29 08:34:53</span><br><span class="line">42018082916364712018-08-29 08:35:35</span><br><span class="line">52018082916552912018-08-29 08:42:39</span><br><span class="line">62018082916552902018-08-29 08:43:00</span><br></pre></td></tr></table></figure></p><p>参考: <a href="https://bitbucket.org/liamstask/goose" target="_blank" rel="noopener">https://bitbucket.org/liamstask/goose</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;what-goose&quot;&gt;&lt;a href=&quot;#what-goose&quot; class=&quot;headerlink&quot; title=&quot;what goose&quot;&gt;&lt;/a&gt;what goose&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;goose is a database migra
      
    
    </summary>
    
      <category term="backend" scheme="http://yoursite.com/categories/backend/"/>
    
    
      <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
      <category term="goose" scheme="http://yoursite.com/tags/goose/"/>
    
  </entry>
  
</feed>
